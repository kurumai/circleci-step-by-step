version: 2.1

jobs:
  jdk-8:
    working_directory: ~/circleci-step-by-step
    docker:
    - image: circleci/openjdk:8-jdk-browsers
    - image: circleci/postgres:9.6-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: circle_test
    
    parallelism: 4

    steps:
    - checkout
    - run: echo "Hello CircleCI!"
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s
    
    - restore_cache:
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
            - ~/.m2
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
    - run: 
        command: |
            mvn test -Dtest=$(circleci tests glob "src/test/**/*.java" | circleci tests split --split-by=timings | sed -E 's/^(.*\/)*//' | sed -z 's/\n/,/g')
            mvn package -Dmaven.test.skip
    - store_test_results:
        path: target/surefire-reports
    - store_artifacts:
        path: target/step-by-step-0.0.1-SNAPSHOT.jar

  jdk-10:
    working_directory: ~/circleci-step-by-step
    docker:
    - image: circleci/openjdk:10-jdk-browsers
    - image: circleci/postgres:9.6-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: circle_test
    
    parallelism: 4

    steps:
    - checkout
    - run: echo "Hello CircleCI!"
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s

    - restore_cache:
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
            - ~/.m2
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
    - run: 
        command: |
            mvn test -Dtest=$(circleci tests glob "src/test/**/*.java" | circleci tests split --split-by=timings | sed -E 's/^(.*\/)*//' | sed -z 's/\n/,/g')
            mvn package -Dmaven.test.skip
    - store_test_results:
        path: target/surefire-reports
    - store_artifacts:
        path: target/step-by-step-0.0.1-SNAPSHOT.jar

  jdk-11:
    working_directory: ~/circleci-step-by-step
    docker:
    - image: circleci/openjdk:11-jdk-browsers
    - image: circleci/postgres:9.6-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: circle_test
    
    parallelism: 4

    steps:
    - checkout
    - run: echo "Hello CircleCI!"
    - run:
        name: Wait for DB
        command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s
    
    - restore_cache:
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
            - ~/.m2
        key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
    - run: 
        command: |
            mvn test -Dtest=$(circleci tests glob "src/test/**/*.java" | circleci tests split --split-by=timings | sed -E 's/^(.*\/)*//' | sed -z 's/\n/,/g')
            mvn package -Dmaven.test.skip
    - store_test_results:
        path: target/surefire-reports
    - store_artifacts:
        path: target/step-by-step-0.0.1-SNAPSHOT.jar

  deploy:
    working_directory: ~/circleci-step-by-step
    docker:
    - image: circleci/openjdk:11-jdk-browsers
    steps:
    - add_ssh_keys:
        fingerprints:
            - "8b:88:75:43:2b:ac:f5:ad:be:bf:ce:17:00:b3:94:a4"
    - run: 
        name: Checkout & Build docker image
        command: |
            ssh azureuser@40.115.188.105 -oStrictHostKeyChecking=no 'cd circleci-step-by-step; git pull; mvn package -Dmaven.test.skip'
            ssh azureuser@40.115.188.105 -oStrictHostKeyChecking=no 'cd circleci-step-by-step; docker build -t kurumai/step-by-step:latest .'
    - run: 
        name: Docker-compose up
        command: |
            ssh azureuser@40.115.188.105 -oStrictHostKeyChecking=no 'cd circleci-step-by-step; docker-compose down; docker-compose up -d'

workflows:
  version: 2
  build:
    jobs:
      #- "jdk-8"
      #- "jdk-10"
      #- "jdk-11"
      - "deploy"          